/*
 * generated by Xtext
 */
package at.ac.tuwien.big.servicelang.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class ServiceGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ContainerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Container");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cContainerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cContainerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cServiceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cServiceAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cServiceServiceParserRuleCall_3_2_0 = (RuleCall)cServiceAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cServiceAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cServiceServiceParserRuleCall_3_3_1_0 = (RuleCall)cServiceAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cClusterKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cClusterAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cClusterClusterParserRuleCall_4_2_0 = (RuleCall)cClusterAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cClusterAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cClusterClusterParserRuleCall_4_3_1_0 = (RuleCall)cClusterAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Container:
		//	{Container} "Container" "{" ("service" "{" service+=Service ("," service+=Service)* "}")? ("cluster" "{"
		//	cluster+=Cluster ("," cluster+=Cluster)* "}")? "}";
		@Override public ParserRule getRule() { return rule; }

		//{Container} "Container" "{" ("service" "{" service+=Service ("," service+=Service)* "}")? ("cluster" "{"
		//cluster+=Cluster ("," cluster+=Cluster)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{Container}
		public Action getContainerAction_0() { return cContainerAction_0; }

		//"Container"
		public Keyword getContainerKeyword_1() { return cContainerKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("service" "{" service+=Service ("," service+=Service)* "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"service"
		public Keyword getServiceKeyword_3_0() { return cServiceKeyword_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }

		//service+=Service
		public Assignment getServiceAssignment_3_2() { return cServiceAssignment_3_2; }

		//Service
		public RuleCall getServiceServiceParserRuleCall_3_2_0() { return cServiceServiceParserRuleCall_3_2_0; }

		//("," service+=Service)*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//service+=Service
		public Assignment getServiceAssignment_3_3_1() { return cServiceAssignment_3_3_1; }

		//Service
		public RuleCall getServiceServiceParserRuleCall_3_3_1_0() { return cServiceServiceParserRuleCall_3_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }

		//("cluster" "{" cluster+=Cluster ("," cluster+=Cluster)* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"cluster"
		public Keyword getClusterKeyword_4_0() { return cClusterKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//cluster+=Cluster
		public Assignment getClusterAssignment_4_2() { return cClusterAssignment_4_2; }

		//Cluster
		public RuleCall getClusterClusterParserRuleCall_4_2_0() { return cClusterClusterParserRuleCall_4_2_0; }

		//("," cluster+=Cluster)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//cluster+=Cluster
		public Assignment getClusterAssignment_4_3_1() { return cClusterAssignment_4_3_1; }

		//Cluster
		public RuleCall getClusterClusterParserRuleCall_4_3_1_0() { return cClusterClusterParserRuleCall_4_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Service");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDesignSpeedKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDesignSpeedAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDesignSpeedEBigIntegerParserRuleCall_4_0 = (RuleCall)cDesignSpeedAssignment_4.eContents().get(0);
		private final Keyword cTypeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeServiceTypeEnumRuleCall_6_0 = (RuleCall)cTypeAssignment_6.eContents().get(0);
		private final Keyword cProvidedByKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cProvidedByAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cProvidedByClusterCrossReference_8_0 = (CrossReference)cProvidedByAssignment_8.eContents().get(0);
		private final RuleCall cProvidedByClusterEStringParserRuleCall_8_0_1 = (RuleCall)cProvidedByClusterCrossReference_8_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Service:
		//	"Service" name=EString "{" "designSpeed" designSpeed=EBigInteger "type" type=ServiceType "providedBy"
		//	providedBy=[Cluster|EString] "}";
		@Override public ParserRule getRule() { return rule; }

		//"Service" name=EString "{" "designSpeed" designSpeed=EBigInteger "type" type=ServiceType "providedBy"
		//providedBy=[Cluster|EString] "}"
		public Group getGroup() { return cGroup; }

		//"Service"
		public Keyword getServiceKeyword_0() { return cServiceKeyword_0; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"designSpeed"
		public Keyword getDesignSpeedKeyword_3() { return cDesignSpeedKeyword_3; }

		//designSpeed=EBigInteger
		public Assignment getDesignSpeedAssignment_4() { return cDesignSpeedAssignment_4; }

		//EBigInteger
		public RuleCall getDesignSpeedEBigIntegerParserRuleCall_4_0() { return cDesignSpeedEBigIntegerParserRuleCall_4_0; }

		//"type"
		public Keyword getTypeKeyword_5() { return cTypeKeyword_5; }

		//type=ServiceType
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }

		//ServiceType
		public RuleCall getTypeServiceTypeEnumRuleCall_6_0() { return cTypeServiceTypeEnumRuleCall_6_0; }

		//"providedBy"
		public Keyword getProvidedByKeyword_7() { return cProvidedByKeyword_7; }

		//providedBy=[Cluster|EString]
		public Assignment getProvidedByAssignment_8() { return cProvidedByAssignment_8; }

		//[Cluster|EString]
		public CrossReference getProvidedByClusterCrossReference_8_0() { return cProvidedByClusterCrossReference_8_0; }

		//EString
		public RuleCall getProvidedByClusterEStringParserRuleCall_8_0_1() { return cProvidedByClusterEStringParserRuleCall_8_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class ClusterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Cluster");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cClusterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDesignSpeedKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDesignSpeedAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDesignSpeedEBigIntegerParserRuleCall_4_0 = (RuleCall)cDesignSpeedAssignment_4.eContents().get(0);
		private final Keyword cServicesKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cServicesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cServicesServiceCrossReference_7_0 = (CrossReference)cServicesAssignment_7.eContents().get(0);
		private final RuleCall cServicesServiceEStringParserRuleCall_7_0_1 = (RuleCall)cServicesServiceCrossReference_7_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cServicesAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cServicesServiceCrossReference_8_1_0 = (CrossReference)cServicesAssignment_8_1.eContents().get(0);
		private final RuleCall cServicesServiceEStringParserRuleCall_8_1_0_1 = (RuleCall)cServicesServiceCrossReference_8_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cBackupKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cBackupAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final CrossReference cBackupClusterCrossReference_10_1_0 = (CrossReference)cBackupAssignment_10_1.eContents().get(0);
		private final RuleCall cBackupClusterEStringParserRuleCall_10_1_0_1 = (RuleCall)cBackupClusterCrossReference_10_1_0.eContents().get(1);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cServerKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cServerAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cServerServerParserRuleCall_11_2_0 = (RuleCall)cServerAssignment_11_2.eContents().get(0);
		private final Group cGroup_11_3 = (Group)cGroup_11.eContents().get(3);
		private final Keyword cCommaKeyword_11_3_0 = (Keyword)cGroup_11_3.eContents().get(0);
		private final Assignment cServerAssignment_11_3_1 = (Assignment)cGroup_11_3.eContents().get(1);
		private final RuleCall cServerServerParserRuleCall_11_3_1_0 = (RuleCall)cServerAssignment_11_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_4 = (Keyword)cGroup_11.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Cluster:
		//	"Cluster" name=EString "{" "designSpeed" designSpeed=EBigInteger "services" "(" services+=[Service|EString] (","
		//	services+=[Service|EString])* ")" ("backup" backup=[Cluster|EString])? ("server" "{" server+=Server (","
		//	server+=Server)* "}")? "}";
		@Override public ParserRule getRule() { return rule; }

		//"Cluster" name=EString "{" "designSpeed" designSpeed=EBigInteger "services" "(" services+=[Service|EString] (","
		//services+=[Service|EString])* ")" ("backup" backup=[Cluster|EString])? ("server" "{" server+=Server (","
		//server+=Server)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//"Cluster"
		public Keyword getClusterKeyword_0() { return cClusterKeyword_0; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"designSpeed"
		public Keyword getDesignSpeedKeyword_3() { return cDesignSpeedKeyword_3; }

		//designSpeed=EBigInteger
		public Assignment getDesignSpeedAssignment_4() { return cDesignSpeedAssignment_4; }

		//EBigInteger
		public RuleCall getDesignSpeedEBigIntegerParserRuleCall_4_0() { return cDesignSpeedEBigIntegerParserRuleCall_4_0; }

		//"services"
		public Keyword getServicesKeyword_5() { return cServicesKeyword_5; }

		//"("
		public Keyword getLeftParenthesisKeyword_6() { return cLeftParenthesisKeyword_6; }

		//services+=[Service|EString]
		public Assignment getServicesAssignment_7() { return cServicesAssignment_7; }

		//[Service|EString]
		public CrossReference getServicesServiceCrossReference_7_0() { return cServicesServiceCrossReference_7_0; }

		//EString
		public RuleCall getServicesServiceEStringParserRuleCall_7_0_1() { return cServicesServiceEStringParserRuleCall_7_0_1; }

		//("," services+=[Service|EString])*
		public Group getGroup_8() { return cGroup_8; }

		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }

		//services+=[Service|EString]
		public Assignment getServicesAssignment_8_1() { return cServicesAssignment_8_1; }

		//[Service|EString]
		public CrossReference getServicesServiceCrossReference_8_1_0() { return cServicesServiceCrossReference_8_1_0; }

		//EString
		public RuleCall getServicesServiceEStringParserRuleCall_8_1_0_1() { return cServicesServiceEStringParserRuleCall_8_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_9() { return cRightParenthesisKeyword_9; }

		//("backup" backup=[Cluster|EString])?
		public Group getGroup_10() { return cGroup_10; }

		//"backup"
		public Keyword getBackupKeyword_10_0() { return cBackupKeyword_10_0; }

		//backup=[Cluster|EString]
		public Assignment getBackupAssignment_10_1() { return cBackupAssignment_10_1; }

		//[Cluster|EString]
		public CrossReference getBackupClusterCrossReference_10_1_0() { return cBackupClusterCrossReference_10_1_0; }

		//EString
		public RuleCall getBackupClusterEStringParserRuleCall_10_1_0_1() { return cBackupClusterEStringParserRuleCall_10_1_0_1; }

		//("server" "{" server+=Server ("," server+=Server)* "}")?
		public Group getGroup_11() { return cGroup_11; }

		//"server"
		public Keyword getServerKeyword_11_0() { return cServerKeyword_11_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_11_1() { return cLeftCurlyBracketKeyword_11_1; }

		//server+=Server
		public Assignment getServerAssignment_11_2() { return cServerAssignment_11_2; }

		//Server
		public RuleCall getServerServerParserRuleCall_11_2_0() { return cServerServerParserRuleCall_11_2_0; }

		//("," server+=Server)*
		public Group getGroup_11_3() { return cGroup_11_3; }

		//","
		public Keyword getCommaKeyword_11_3_0() { return cCommaKeyword_11_3_0; }

		//server+=Server
		public Assignment getServerAssignment_11_3_1() { return cServerAssignment_11_3_1; }

		//Server
		public RuleCall getServerServerParserRuleCall_11_3_1_0() { return cServerServerParserRuleCall_11_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11_4() { return cRightCurlyBracketKeyword_11_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class EBigIntegerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EBigInteger");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EBigInteger returns ecore::EBigInteger:
		//	"-"? INT;
		@Override public ParserRule getRule() { return rule; }

		//"-"? INT
		public Group getGroup() { return cGroup; }

		//"-"?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}

	public class ServerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Server");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSpeedKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSpeedAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSpeedEBigIntegerParserRuleCall_4_0 = (RuleCall)cSpeedAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Server:
		//	"Server" name=EString "{" "speed" speed=EBigInteger "}";
		@Override public ParserRule getRule() { return rule; }

		//"Server" name=EString "{" "speed" speed=EBigInteger "}"
		public Group getGroup() { return cGroup; }

		//"Server"
		public Keyword getServerKeyword_0() { return cServerKeyword_0; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"speed"
		public Keyword getSpeedKeyword_3() { return cSpeedKeyword_3; }

		//speed=EBigInteger
		public Assignment getSpeedAssignment_4() { return cSpeedAssignment_4; }

		//EBigInteger
		public RuleCall getSpeedEBigIntegerParserRuleCall_4_0() { return cSpeedEBigIntegerParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	
	
	public class ServiceTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ServiceType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBESTEFFORTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBESTEFFORTBESTEFFORTKeyword_0_0 = (Keyword)cBESTEFFORTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cWEAKCONTRACTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cWEAKCONTRACTWEAKCONTRACTKeyword_1_0 = (Keyword)cWEAKCONTRACTEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cFAILSAFEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cFAILSAFEFAILSAFEKeyword_2_0 = (Keyword)cFAILSAFEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cIMPORTANTEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cIMPORTANTIMPORTANTKeyword_3_0 = (Keyword)cIMPORTANTEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum ServiceType:
		//	BESTEFFORT | WEAKCONTRACT | FAILSAFE | IMPORTANT;
		public EnumRule getRule() { return rule; }

		//BESTEFFORT | WEAKCONTRACT | FAILSAFE | IMPORTANT
		public Alternatives getAlternatives() { return cAlternatives; }

		//BESTEFFORT
		public EnumLiteralDeclaration getBESTEFFORTEnumLiteralDeclaration_0() { return cBESTEFFORTEnumLiteralDeclaration_0; }

		//"BESTEFFORT"
		public Keyword getBESTEFFORTBESTEFFORTKeyword_0_0() { return cBESTEFFORTBESTEFFORTKeyword_0_0; }

		//WEAKCONTRACT
		public EnumLiteralDeclaration getWEAKCONTRACTEnumLiteralDeclaration_1() { return cWEAKCONTRACTEnumLiteralDeclaration_1; }

		//"WEAKCONTRACT"
		public Keyword getWEAKCONTRACTWEAKCONTRACTKeyword_1_0() { return cWEAKCONTRACTWEAKCONTRACTKeyword_1_0; }

		//FAILSAFE
		public EnumLiteralDeclaration getFAILSAFEEnumLiteralDeclaration_2() { return cFAILSAFEEnumLiteralDeclaration_2; }

		//"FAILSAFE"
		public Keyword getFAILSAFEFAILSAFEKeyword_2_0() { return cFAILSAFEFAILSAFEKeyword_2_0; }

		//IMPORTANT
		public EnumLiteralDeclaration getIMPORTANTEnumLiteralDeclaration_3() { return cIMPORTANTEnumLiteralDeclaration_3; }

		//"IMPORTANT"
		public Keyword getIMPORTANTIMPORTANTKeyword_3_0() { return cIMPORTANTIMPORTANTKeyword_3_0; }
	}
	
	private final ContainerElements pContainer;
	private final ServiceElements pService;
	private final ClusterElements pCluster;
	private final EStringElements pEString;
	private final EBigIntegerElements pEBigInteger;
	private final ServiceTypeElements unknownRuleServiceType;
	private final ServerElements pServer;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ServiceGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pContainer = new ContainerElements();
		this.pService = new ServiceElements();
		this.pCluster = new ClusterElements();
		this.pEString = new EStringElements();
		this.pEBigInteger = new EBigIntegerElements();
		this.unknownRuleServiceType = new ServiceTypeElements();
		this.pServer = new ServerElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("at.ac.tuwien.big.servicelang.Service".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Container:
	//	{Container} "Container" "{" ("service" "{" service+=Service ("," service+=Service)* "}")? ("cluster" "{"
	//	cluster+=Cluster ("," cluster+=Cluster)* "}")? "}";
	public ContainerElements getContainerAccess() {
		return pContainer;
	}
	
	public ParserRule getContainerRule() {
		return getContainerAccess().getRule();
	}

	//Service:
	//	"Service" name=EString "{" "designSpeed" designSpeed=EBigInteger "type" type=ServiceType "providedBy"
	//	providedBy=[Cluster|EString] "}";
	public ServiceElements getServiceAccess() {
		return pService;
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}

	//Cluster:
	//	"Cluster" name=EString "{" "designSpeed" designSpeed=EBigInteger "services" "(" services+=[Service|EString] (","
	//	services+=[Service|EString])* ")" ("backup" backup=[Cluster|EString])? ("server" "{" server+=Server (","
	//	server+=Server)* "}")? "}";
	public ClusterElements getClusterAccess() {
		return pCluster;
	}
	
	public ParserRule getClusterRule() {
		return getClusterAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//EBigInteger returns ecore::EBigInteger:
	//	"-"? INT;
	public EBigIntegerElements getEBigIntegerAccess() {
		return pEBigInteger;
	}
	
	public ParserRule getEBigIntegerRule() {
		return getEBigIntegerAccess().getRule();
	}

	//enum ServiceType:
	//	BESTEFFORT | WEAKCONTRACT | FAILSAFE | IMPORTANT;
	public ServiceTypeElements getServiceTypeAccess() {
		return unknownRuleServiceType;
	}
	
	public EnumRule getServiceTypeRule() {
		return getServiceTypeAccess().getRule();
	}

	//Server:
	//	"Server" name=EString "{" "speed" speed=EBigInteger "}";
	public ServerElements getServerAccess() {
		return pServer;
	}
	
	public ParserRule getServerRule() {
		return getServerAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
