## =======================
##  General Configuration
## =======================

## Rank-based statistical inference methods, such as the Mann-Whitney U test
## and the Wilcoxon Signed-Ranks test, approximate the test's discrete
## distribution with a continuous distribution for computing the p-value. It
## has been recommended but not often employed in practice to apply a
## continuity correction. When this flag is set to true, such tests include
## continuity correction.
#org.moeaframework.util.statistics.continuity_correction = false

## By default, non-dominated populations do not allow two solutions with nearly
## identical objective values.  This behavior can be modified:
##   NO_DUPLICATE_OBJECTIVES - Do not allow solutions with nearly identical
##       objectives
##   ALLOW_DUPLICATE_OBJECTIVES - Allow solutions with nearly identical
##       objectives if they have different decision variables
##   ALLOW_DUPLICATES - Allow all duplicate solutions (use caution since the
##       size of the population can grow large)
#org.moeaframework.core.duplicate_mode = NO_DUPLICATE_OBJECTIVES

## By default, fast non-dominated sorting is used in algorithms like NSGA-II
## to rank solutions.  This has a worst case time complexity of O(MN^2) versus
## O(MN^3) of the naive implementation, where M is the number of objectives and
## N is the number of solutions.  However, the naive implementations tends to
## have a faster average time and is used by default.  If speed is a concern,
## we recommend testing both options to see which performs well.
#org.moeaframework.core.fast_nondominated_sorting = false

## Genetic programming functions are by default protected against returning
## NaN or other invalid numbers.  Unless protected against, these invalid
## values propagate throughout the expression and corrupt the results.  This
## feature can be disabled by setting this flag to false.
#org.moeaframework.util.tree.protected_functions = false

## The generational distance (GD) and inverted generational distance (IGD)
## indicators are typically computed using some power d.  In the literature, 
## typically GD uses d=2 and IGD uses d=1.
#org.moeaframework.core.indicator.gd_power = 2.0
#org.moeaframework.core.indicator.igd_power = 1.0

## When calculating the reference point for the hypervolume calculation, the
## nadir point of the reference set is offset by the delta factor (e.g.,
## min + delta*(max-min)).  A small but non-zero delta is recommended.
#org.moeaframework.core.indicator.hypervolume_delta = 0.01

## A custom ideal and reference point can be defined for each problem.  The name
## must match the value returned by Problem#getName().  Separate values with
## commas.  The last value will be repeated as needed to define the reference
## point (e.g., the value 2 is expanded to (2, 2, ..., 2)).
#org.moeaframework.core.indicator.hypervolume_idealpt.DTLZ3 = 0
#org.moeaframework.core.indicator.hypervolume_refpt.DTLZ3 = 2

## The default hypervolume implementation may become computationally prohibitive
## on large approximation sets or at high dimensions.  Custom hypervolume
## implementations can be provided.  The following variable substitutions are
## provided:
##   {0} number of objectives
##   {1} approximation set size
##   {2} file containing the approximation set
##   {3} file containing the reference point
##   {4} the reference point, separated by spaces
#org.moeaframework.core.indicator.hypervolume = ./wfg2.exe {2}
#org.moeaframework.core.indicator.hypervolume = ./hoy.exe {0} {1} {2} {3} 

## By default, hypervolume calculations are given the minimized approximation
## set, so the reference point is at (1, 1, ..., 1).  If the custom hypervolume
## implementation requires maximized sets, such that the reference point is at
## (0, 0, ..., 0), set this option to true.
#org.moeaframework.core.indicator.hypervolume_inverted = true

## In cases where the default or custom hypervolume implementations are
## computationally prohibitive, the hypervolume indicator can be optionally
## disabled.  When disabled, the hypervolume will be reported as NaN.
#org.moeaframework.core.indicator.hypervolume_enabled = false

## When restarting an interrupted run, the software will attempt to recover data
## from the prior run.  It first cleans the file to remove any invalid data.
## During cleanup, the software moves the old data into an "unclean" file, then
## proceeds to copy all valid data out of the unclean file.  If this process is
## interrupted, the unclean file may still exist.  By default, the software
## will exit with an exception if an unclean file exists, which would require
## manual intervention.  Setting this option to 'overwrite' will automatically
## delete the unclean file.  Setting this option to 'restore' will attempt to
## recover the unclean file.
#org.moeaframework.analysis.sensitivity.cleanup = restore


## ==============================
##  Custom Problem Configuration
## ==============================

## The following enumerates a list of problems by name that are made available
## through the ProblemFactory.  For each problem listed, the
##   org.moeaframework.problem.NAME.class
## property must be specified with the implementation's class name, and
##   org.moeaframework.problem.NAME.referenceSet
## optionally providing the filename for the reference set.
#org.moeaframework.problem.problems = 


## ====================
##  PISA Configuration
## ====================

## The following defines the available PISA selector names.
#org.moeaframework.algorithm.pisa.algorithms = FEMO, HypE, IBEA, NSGA2, SEMO2, SVH, SPEA2

## The poll rate specifies, in milliseconds, how frequently the state file is 
## checked.
#org.moeaframework.algorithm.pisa.poll = 100

## For each algorithm, define its configuration options below.  For an
## algorithm called NAME, specify the following:
##
##   1) The executable to run:
##        org.moeaframework.algorithm.pisa.NAME.command = <string>
##
##   2) The list of parameters:
##        org.moeaframework.algorithm.pisa.NAME.parameters = <list>
##      The order typically matters, so ensure the parameters are listed in the
##      same order as expected by the executable.
##
##   3) For each parameter PARAM, specify its default value:
##        org.moeaframework.algorithm.pisa.NAME.parameter.PARAM = <number>
##      It is not necessary to give a default for the seed parameter as it is
##      always set by the MOEA Framework.
##
## Note: Prior to version 1.14, the MOEA Framework only accepted a static
## version of the algorithm parameters using the option:
##   org.moeaframework.algorithm.pisa.NAME.configuration = <file>
## This is still accepted, but would mean the MOEA Framework is unable to
## change the algorithm parameters.

#org.moeaframework.algorithm.pisa.ECEA.command = ./pisa/ecea_win/ecea.exe
#org.moeaframework.algorithm.pisa.ECEA.parameters = seed, max_iterations
#org.moeaframework.algorithm.pisa.ECEA.parameter.max_iterations = 100

#org.moeaframework.algorithm.pisa.FEMO.command = ./pisa/femo_win/femo.exe
#org.moeaframework.algorithm.pisa.FEMO.parameters = seed

#org.moeaframework.algorithm.pisa.HypE.command = ./pisa/hype_win/hype.exe
#org.moeaframework.algorithm.pisa.HypE.parameters = seed, tournament, mating, bound, nrOfSamples
#org.moeaframework.algorithm.pisa.HypE.parameter.tournament = 5
#org.moeaframework.algorithm.pisa.HypE.parameter.mating = 1
#org.moeaframework.algorithm.pisa.HypE.parameter.bound = 2000
#org.moeaframework.algorithm.pisa.HypE.parameter.nrOfSamples = -1

#org.moeaframework.algorithm.pisa.IBEA.command = ./pisa/ibea_win/ibea.exe
#org.moeaframework.algorithm.pisa.IBEA.parameters = seed, tournament, indicator, kappa, rho
#org.moeaframework.algorithm.pisa.IBEA.parameter.tournament = 2
#org.moeaframework.algorithm.pisa.IBEA.parameter.indicator = 0
#org.moeaframework.algorithm.pisa.IBEA.parameter.kappa = 0.05
#org.moeaframework.algorithm.pisa.IBEA.parameter.rho = 1.1

#org.moeaframework.algorithm.pisa.NSGA2.command = ./pisa/nsga2_win/nsga2.exe
#org.moeaframework.algorithm.pisa.NSGA2.parameters = seed, tournament
#org.moeaframework.algorithm.pisa.NSGA2.parameter.tournament = 2

#org.moeaframework.algorithm.pisa.SEMO2.command = ./pisa/semo2_win/semo2.exe
#org.moeaframework.algorithm.pisa.SEMO2.parameters = seed

#org.moeaframework.algorithm.pisa.SVH.command = ./pisa/shv_win/shv.exe
#org.moeaframework.algorithm.pisa.SVH.parameters = seed, bound, junks, junksize
#org.moeaframework.algorithm.pisa.SVH.parameter.bound = 2000
#org.moeaframework.algorithm.pisa.SVH.parameter.junks = 100
#org.moeaframework.algorithm.pisa.SVH.parameter.junksize = 100

#org.moeaframework.algorithm.pisa.SIBEA.command = java -jar ./pisa/sibea_win/sibea.jar
#org.moeaframework.algorithm.pisa.SIBEA.parameters = seed, bound
#org.moeaframework.algorithm.pisa.SIBEA.parameter.bound = 10

#org.moeaframework.algorithm.pisa.SPAM.command = ./pisa/SPAM_win/spam.exe
#org.moeaframework.algorithm.pisa.SPAM.parameters = seed, bound, prefreltype
#org.moeaframework.algorithm.pisa.SPAM.parameter.bound = 1.2
#org.moeaframework.algorithm.pisa.SPAM.parameter.prefreltype = 6

#org.moeaframework.algorithm.pisa.SPEA2.command = ./pisa/spea2_win/spea2.exe
#org.moeaframework.algorithm.pisa.SPEA2.parameters = seed, tournament
#org.moeaframework.algorithm.pisa.SPEA2.parameter.tournament = 2


## ===============================
##  Diagnostic Tool Configuration
## ===============================

## Comma-separated list of algorithms available in the diagnostic tool.  PISA
## algorithms are automatically included.
#org.moeaframework.analysis.diagnostics.algorithms = NSGAII, NSGAIII, GDE3, \
#    eMOEA, eNSGAII, MOEAD, Random

## Comma-separated list of problems available in the diagnostic tool.
#org.moeaframework.analysis.diagnostics.problems = \
#    DTLZ1_2, DTLZ2_2, DTLZ3_2, DTLZ4_2, DTLZ7_2, \
#    ROT_DTLZ1_2, ROT_DTLZ2_2, ROT_DTLZ3_2, ROT_DTLZ4_2, ROT_DTLZ7_2, \
#    UF1, UF2, UF3, UF4, UF5, UF6, UF7, UF8, UF9, UF10, UF11, UF12, UF13, \
#    CF1, CF2, CF3, CF4, CF5, CF6, CF7, CF8, CF9, CF10, \
#    LZ1, LZ2, LZ3, LZ4, LZ5, LZ6, LZ7, LZ8, LZ9, \
#    WFG1_2, WFG2_2, WFG3_2, WFG4_2, WFG5_2, WFG6_2, WFG7_2, WFG8_2, WFG9_2, \
#    ZDT1, ZDT2, ZDT3, ZDT4, ZDT5, ZDT6, \
#    Belegundu, Binh, Binh2, Binh3, Binh4, Fonseca, Fonseca2, Jimenez, Kita, \
#    Kursawe, Laumanns, Lis, Murata, Obayashi, OKA1, OKA2, Osyczka, Osyczka2, \
#    Poloni, Quagliarella, Rendon, Rendon2, Schaffer, Schaffer2, Srinivas, \
#    Tamaki, Tanaka, Viennet, Viennet2, Viennet3, Viennet4
