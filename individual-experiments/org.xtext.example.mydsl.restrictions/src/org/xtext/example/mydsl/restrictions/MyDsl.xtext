// automatically generated by Xtext
grammar org.xtext.example.mydsl.restrictions.MyDsl with org.eclipse.xtext.common.Terminals

import "http://example.com/example-restrictions" 
import "http://www.eclipse.org/emf/2003/XMLType" as type
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

OrdersType returns OrdersType:
	'OrdersType'
	'{'
		'order' '{' order+=OrderDetail ( "," order+=OrderDetail)* '}' 
	'}';



OrderDetail returns OrderDetail:
	'OrderDetail'
	orderID=ID0
	'{'
		('customerAge' customerAge=CustomerAge)?
		('customerContact1' customerContact1=CustomerContactNumber1)?
		('customerFirstName' customerFirstName=CustomerFirstName)?
		('customerLastName' customerLastName=CustomerLastName)?
		('customerNumber' customerNumber=CustomerNumber)?
		('customerPassword' customerPassword=CustomerPassword)?
		('customerUSState' customerUSState=USState)?
		'customerAddress' customerAddress=RestrictedAddress
	'}';

RestrictedAddress returns RestrictedAddress:
	'RestrictedAddress'
	'{'
		'street' '{' street+=String0 ( "," street+=String0)* '}' 
		'city' city=String0
	'}';

CustomerAge returns CustomerAge:
//	'CustomerAge' /* TODO: implement this rule and an appropriate IValueConverter */;
INT;

CustomerContactNumber1 returns CustomerContactNumber1:
//	'CustomerContactNumber1' /* TODO: implement this rule and an appropriate IValueConverter */;
INT;

CustomerFirstName returns CustomerFirstName:
//	'CustomerFirstName' /* TODO: implement this rule and an appropriate IValueConverter */;
STRING;

CustomerLastName returns CustomerLastName:
//	'CustomerLastName' /* TODO: implement this rule and an appropriate IValueConverter */;
STRING;

CustomerNumber returns CustomerNumber:
//	'CustomerNumber' /* TODO: implement this rule and an appropriate IValueConverter */;
STRING;

CustomerPassword returns CustomerPassword:
//	'CustomerPassword' /* TODO: implement this rule and an appropriate IValueConverter */;
STRING;

enum USState returns USState:
				A_K = 'A_K' | L_T = 'L_T' | U_Z = 'U_Z';

ID0 returns type::ID:
	'ID' /* TODO: implement this rule and an appropriate IValueConverter */;

String0 returns type::String:
//	'String' /* TODO: implement this rule and an appropriate IValueConverter */;
STRING;