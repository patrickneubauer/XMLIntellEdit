/*
* generated by Xtext
*/
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.restrictions.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.restrictions.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.restrictions.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;
 	
    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "OrdersType";	
   	}
   	
   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleOrdersType
entryRuleOrdersType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrdersTypeRule()); }
	 iv_ruleOrdersType=ruleOrdersType 
	 { $current=$iv_ruleOrdersType.current; } 
	 EOF 
;

// Rule OrdersType
ruleOrdersType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='OrdersType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrdersTypeAccess().getOrdersTypeKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOrdersTypeAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='order' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOrdersTypeAccess().getOrderKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOrdersTypeAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrdersTypeAccess().getOrderOrderDetailParserRuleCall_4_0()); 
	    }
		lv_order_4_0=ruleOrderDetail		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrdersTypeRule());
	        }
       		add(
       			$current, 
       			"order",
        		lv_order_4_0, 
        		"OrderDetail");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOrdersTypeAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrdersTypeAccess().getOrderOrderDetailParserRuleCall_5_1_0()); 
	    }
		lv_order_6_0=ruleOrderDetail		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrdersTypeRule());
	        }
       		add(
       			$current, 
       			"order",
        		lv_order_6_0, 
        		"OrderDetail");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOrdersTypeAccess().getRightCurlyBracketKeyword_6());
    }
	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getOrdersTypeAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleOrderDetail
entryRuleOrderDetail returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrderDetailRule()); }
	 iv_ruleOrderDetail=ruleOrderDetail 
	 { $current=$iv_ruleOrderDetail.current; } 
	 EOF 
;

// Rule OrderDetail
ruleOrderDetail returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='OrderDetail' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrderDetailAccess().getOrderDetailKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderDetailAccess().getOrderIDID0ParserRuleCall_1_0()); 
	    }
		lv_orderID_1_0=ruleID0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderDetailRule());
	        }
       		set(
       			$current, 
       			"orderID",
        		lv_orderID_1_0, 
        		"ID0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOrderDetailAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='customerAge' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOrderDetailAccess().getCustomerAgeKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderDetailAccess().getCustomerAgeCustomerAgeParserRuleCall_3_1_0()); 
	    }
		lv_customerAge_4_0=ruleCustomerAge		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderDetailRule());
	        }
       		set(
       			$current, 
       			"customerAge",
        		lv_customerAge_4_0, 
        		"CustomerAge");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='customerContact1' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOrderDetailAccess().getCustomerContact1Keyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderDetailAccess().getCustomerContact1CustomerContactNumber1ParserRuleCall_4_1_0()); 
	    }
		lv_customerContact1_6_0=ruleCustomerContactNumber1		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderDetailRule());
	        }
       		set(
       			$current, 
       			"customerContact1",
        		lv_customerContact1_6_0, 
        		"CustomerContactNumber1");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='customerFirstName' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOrderDetailAccess().getCustomerFirstNameKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderDetailAccess().getCustomerFirstNameCustomerFirstNameParserRuleCall_5_1_0()); 
	    }
		lv_customerFirstName_8_0=ruleCustomerFirstName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderDetailRule());
	        }
       		set(
       			$current, 
       			"customerFirstName",
        		lv_customerFirstName_8_0, 
        		"CustomerFirstName");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='customerLastName' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getOrderDetailAccess().getCustomerLastNameKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderDetailAccess().getCustomerLastNameCustomerLastNameParserRuleCall_6_1_0()); 
	    }
		lv_customerLastName_10_0=ruleCustomerLastName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderDetailRule());
	        }
       		set(
       			$current, 
       			"customerLastName",
        		lv_customerLastName_10_0, 
        		"CustomerLastName");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='customerNumber' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getOrderDetailAccess().getCustomerNumberKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderDetailAccess().getCustomerNumberCustomerNumberParserRuleCall_7_1_0()); 
	    }
		lv_customerNumber_12_0=ruleCustomerNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderDetailRule());
	        }
       		set(
       			$current, 
       			"customerNumber",
        		lv_customerNumber_12_0, 
        		"CustomerNumber");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_13='customerPassword' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getOrderDetailAccess().getCustomerPasswordKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderDetailAccess().getCustomerPasswordCustomerPasswordParserRuleCall_8_1_0()); 
	    }
		lv_customerPassword_14_0=ruleCustomerPassword		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderDetailRule());
	        }
       		set(
       			$current, 
       			"customerPassword",
        		lv_customerPassword_14_0, 
        		"CustomerPassword");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_15='customerUSState' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getOrderDetailAccess().getCustomerUSStateKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderDetailAccess().getCustomerUSStateUSStateEnumRuleCall_9_1_0()); 
	    }
		lv_customerUSState_16_0=ruleUSState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderDetailRule());
	        }
       		set(
       			$current, 
       			"customerUSState",
        		lv_customerUSState_16_0, 
        		"USState");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_17='customerAddress' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getOrderDetailAccess().getCustomerAddressKeyword_10());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderDetailAccess().getCustomerAddressRestrictedAddressParserRuleCall_11_0()); 
	    }
		lv_customerAddress_18_0=ruleRestrictedAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderDetailRule());
	        }
       		set(
       			$current, 
       			"customerAddress",
        		lv_customerAddress_18_0, 
        		"RestrictedAddress");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getOrderDetailAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleRestrictedAddress
entryRuleRestrictedAddress returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRestrictedAddressRule()); }
	 iv_ruleRestrictedAddress=ruleRestrictedAddress 
	 { $current=$iv_ruleRestrictedAddress.current; } 
	 EOF 
;

// Rule RestrictedAddress
ruleRestrictedAddress returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RestrictedAddress' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRestrictedAddressAccess().getRestrictedAddressKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRestrictedAddressAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='street' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRestrictedAddressAccess().getStreetKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRestrictedAddressAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRestrictedAddressAccess().getStreetString0ParserRuleCall_4_0()); 
	    }
		lv_street_4_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRestrictedAddressRule());
	        }
       		add(
       			$current, 
       			"street",
        		lv_street_4_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRestrictedAddressAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRestrictedAddressAccess().getStreetString0ParserRuleCall_5_1_0()); 
	    }
		lv_street_6_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRestrictedAddressRule());
	        }
       		add(
       			$current, 
       			"street",
        		lv_street_6_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRestrictedAddressAccess().getRightCurlyBracketKeyword_6());
    }
	otherlv_8='city' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRestrictedAddressAccess().getCityKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRestrictedAddressAccess().getCityString0ParserRuleCall_8_0()); 
	    }
		lv_city_9_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRestrictedAddressRule());
	        }
       		set(
       			$current, 
       			"city",
        		lv_city_9_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRestrictedAddressAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleCustomerAge
entryRuleCustomerAge returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomerAgeRule()); } 
	 iv_ruleCustomerAge=ruleCustomerAge 
	 { $current=$iv_ruleCustomerAge.current.getText(); }  
	 EOF 
;

// Rule CustomerAge
ruleCustomerAge returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getCustomerAgeAccess().getINTTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleCustomerContactNumber1
entryRuleCustomerContactNumber1 returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomerContactNumber1Rule()); } 
	 iv_ruleCustomerContactNumber1=ruleCustomerContactNumber1 
	 { $current=$iv_ruleCustomerContactNumber1.current.getText(); }  
	 EOF 
;

// Rule CustomerContactNumber1
ruleCustomerContactNumber1 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getCustomerContactNumber1Access().getINTTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleCustomerFirstName
entryRuleCustomerFirstName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomerFirstNameRule()); } 
	 iv_ruleCustomerFirstName=ruleCustomerFirstName 
	 { $current=$iv_ruleCustomerFirstName.current.getText(); }  
	 EOF 
;

// Rule CustomerFirstName
ruleCustomerFirstName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getCustomerFirstNameAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleCustomerLastName
entryRuleCustomerLastName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomerLastNameRule()); } 
	 iv_ruleCustomerLastName=ruleCustomerLastName 
	 { $current=$iv_ruleCustomerLastName.current.getText(); }  
	 EOF 
;

// Rule CustomerLastName
ruleCustomerLastName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getCustomerLastNameAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleCustomerNumber
entryRuleCustomerNumber returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomerNumberRule()); } 
	 iv_ruleCustomerNumber=ruleCustomerNumber 
	 { $current=$iv_ruleCustomerNumber.current.getText(); }  
	 EOF 
;

// Rule CustomerNumber
ruleCustomerNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getCustomerNumberAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleCustomerPassword
entryRuleCustomerPassword returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomerPasswordRule()); } 
	 iv_ruleCustomerPassword=ruleCustomerPassword 
	 { $current=$iv_ruleCustomerPassword.current.getText(); }  
	 EOF 
;

// Rule CustomerPassword
ruleCustomerPassword returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getCustomerPasswordAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleID0
entryRuleID0 returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getID0Rule()); } 
	 iv_ruleID0=ruleID0 
	 { $current=$iv_ruleID0.current.getText(); }  
	 EOF 
;

// Rule ID0
ruleID0 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='ID' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getID0Access().getIDKeyword()); 
    }

    ;





// Entry rule entryRuleString0
entryRuleString0 returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getString0Rule()); } 
	 iv_ruleString0=ruleString0 
	 { $current=$iv_ruleString0.current.getText(); }  
	 EOF 
;

// Rule String0
ruleString0 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getString0Access().getSTRINGTerminalRuleCall()); 
    }

    ;





// Rule USState
ruleUSState returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='A_K' 
	{
        $current = grammarAccess.getUSStateAccess().getA_KEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getUSStateAccess().getA_KEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='L_T' 
	{
        $current = grammarAccess.getUSStateAccess().getL_TEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getUSStateAccess().getL_TEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='U_Z' 
	{
        $current = grammarAccess.getUSStateAccess().getU_ZEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getUSStateAccess().getU_ZEnumLiteralDeclaration_2()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


