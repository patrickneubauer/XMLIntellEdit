// automatically generated by Xtext
grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

import "http://example.com/blah" 
import "http://www.eclipse.org/emf/2003/XMLType" as type
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

OrdersType returns OrdersType:
	'OrdersType'
	'{'
		'order1' '{' order1+=OrderDetail1 ( "," order1+=OrderDetail1)* '}' 
		'order2' '{' order2+=OrderDetail2 ( "," order2+=OrderDetail2)* '}' 
		'orderReference1' '{' orderReference1+=OrderRef1 ( "," orderReference1+=OrderRef1)* '}' 
		'orderReference2' '{' orderReference2+=OrderRef2 ( "," orderReference2+=OrderRef2)* '}' 
	'}';





OrderDetail1 returns OrderDetail1:
	{OrderDetail1}
	'OrderDetail1'
	name=ID0
	'{'
		('customerAddress' customerAddress=String0)?
		('customerContact' customerContact=String0)?
		('customerName' customerName=String0)?
	'}';

OrderDetail2 returns OrderDetail2:
	{OrderDetail2}
	'OrderDetail2'
	name=ID0
	'{'
		('customerName' customerName=String0)?
	'}';

OrderRef1 returns OrderRef1:
	{OrderRef1}
	'OrderRef1'
	'{'
		('orderDetail1' orderDetail1=[OrderDetail1|IDREF])?
	'}';

OrderRef2 returns OrderRef2:
	{OrderRef2}
	'OrderRef2'
	'{'
		('orderDetail2' orderDetail2=[OrderDetail2|IDREF])?
	'}';

String0 returns type::String:
//	'String' /* TODO: implement this rule and an appropriate IValueConverter */;
	STRING
;

ID0 returns type::ID:
//	'ID' /* TODO: implement this rule and an appropriate IValueConverter */;
	ID;
	
IDREF returns ecore::EString:
	ID
;
