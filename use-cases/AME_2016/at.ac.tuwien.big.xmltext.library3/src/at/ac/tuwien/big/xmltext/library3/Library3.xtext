// automatically generated by Xtext
grammar at.ac.tuwien.big.xmltext.library3.Library3 with org.eclipse.xtext.common.Terminals

import "platform:/plugin/library3.xsd" 
import "http://www.eclipse.org/emf/2003/XMLType" as type
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

LibraryType returns LibraryType:
	{LibraryType}
	'Library'
	'{'
		( book+=BookType ( "," book+=BookType)* )?
		( customer+=CustomerType ( "," customer+=CustomerType)* )?
	'}';

AnyGenericConstruct returns AnyGenericConstruct:
	AnyGenericElement | AnyGenericText;

BookType returns BookType:
	'Book'
	name=ID0
	'{'
		'title' title=STRING
		'author' author=NameType
		'pages' pages=Int0
		'isbn' isbn=IsbnType
		( bookInfo=BookInfoType)?
	'}';

CustomerType returns CustomerType:
	'Customer'
	'{'
		'firstName' firstName=STRING
		'lastName' lastName=STRING
		('borrowedBookId' borrowedBookId=[ecore::EObject|IDREF])?
	'}';

ID0 returns type::ID:
	ID;

NameType returns NameType:
	STRING;

Int0 returns type::Int:
	INT;
	
IsbnType returns IsbnType:
	STRING;

BookInfoType returns BookInfoType:
	{BookInfoType}
	'BookInfo'
	( any+=AnyGenericElement ( "," any+=AnyGenericElement)* )?
;

AnyGenericElement returns AnyGenericElement:
	{AnyGenericElement}
	'{'
		( elemName=STRING)?
		(':' elemValue=STRING)?
		( anyGenericAttr+=AnyGenericAttribute ( ","
			anyGenericAttr+=AnyGenericAttribute	)* )?
		( anyGenericElement+=AnyGenericElement ( "," 
			anyGenericElement+=AnyGenericElement )* )?
	'}';

AnyGenericAttribute returns AnyGenericAttribute:
	attrName=STRING '='
	attrValue=STRING
;

AnyGenericText returns AnyGenericText:
	{AnyGenericText}
	( textValue=STRING)?
;

EObject returns ecore::EObject:
	{ecore::EObject}
;

IDREF returns ecore::EString:
	ID;
	
EString returns ecore::EString:
	STRING
;
	

terminal DATETIME:
	(
		('0'..'9')('0'..'9')('0'..'9')('0'..'9')
		'-'
		('0'..'1')('0'..'9')
		'-'
		('0'..'3')('0'..'9')
		'T'
		('0'..'2')('0'..'9')
		':'
		('0'..'5')('0'..'9')
		':'
		('0'..'5')('0'..'9')
	)
;

