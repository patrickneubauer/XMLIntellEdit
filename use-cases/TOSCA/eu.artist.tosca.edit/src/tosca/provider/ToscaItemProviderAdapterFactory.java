/**
 */
package tosca.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import tosca.util.ToscaAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ToscaItemProviderAdapterFactory extends ToscaAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ToscaItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.ArtifactReferencesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArtifactReferencesTypeItemProvider artifactReferencesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.ArtifactReferencesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArtifactReferencesTypeAdapter() {
		if (artifactReferencesTypeItemProvider == null) {
			artifactReferencesTypeItemProvider = new ArtifactReferencesTypeItemProvider(this);
		}

		return artifactReferencesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.CapabilitiesType_TCapability} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CapabilitiesType_TCapabilityItemProvider capabilitiesType_TCapabilityItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.CapabilitiesType_TCapability}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCapabilitiesType_TCapabilityAdapter() {
		if (capabilitiesType_TCapabilityItemProvider == null) {
			capabilitiesType_TCapabilityItemProvider = new CapabilitiesType_TCapabilityItemProvider(this);
		}

		return capabilitiesType_TCapabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.CapabilitiesType_CapabilityRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CapabilitiesType_CapabilityRefItemProvider capabilitiesType_CapabilityRefItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.CapabilitiesType_CapabilityRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCapabilitiesType_CapabilityRefAdapter() {
		if (capabilitiesType_CapabilityRefItemProvider == null) {
			capabilitiesType_CapabilityRefItemProvider = new CapabilitiesType_CapabilityRefItemProvider(this);
		}

		return capabilitiesType_CapabilityRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.CapabilityDefinitionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CapabilityDefinitionsTypeItemProvider capabilityDefinitionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.CapabilityDefinitionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCapabilityDefinitionsTypeAdapter() {
		if (capabilityDefinitionsTypeItemProvider == null) {
			capabilityDefinitionsTypeItemProvider = new CapabilityDefinitionsTypeItemProvider(this);
		}

		return capabilityDefinitionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.ConstraintsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintsTypeItemProvider constraintsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.ConstraintsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintsTypeAdapter() {
		if (constraintsTypeItemProvider == null) {
			constraintsTypeItemProvider = new ConstraintsTypeItemProvider(this);
		}

		return constraintsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.DefinitionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefinitionsTypeItemProvider definitionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.DefinitionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefinitionsTypeAdapter() {
		if (definitionsTypeItemProvider == null) {
			definitionsTypeItemProvider = new DefinitionsTypeItemProvider(this);
		}

		return definitionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.DerivedFromType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivedFromTypeItemProvider derivedFromTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.DerivedFromType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivedFromTypeAdapter() {
		if (derivedFromTypeItemProvider == null) {
			derivedFromTypeItemProvider = new DerivedFromTypeItemProvider(this);
		}

		return derivedFromTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.ExcludeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExcludeTypeItemProvider excludeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.ExcludeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExcludeTypeAdapter() {
		if (excludeTypeItemProvider == null) {
			excludeTypeItemProvider = new ExcludeTypeItemProvider(this);
		}

		return excludeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.ExtensionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtensionsTypeItemProvider extensionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.ExtensionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExtensionsTypeAdapter() {
		if (extensionsTypeItemProvider == null) {
			extensionsTypeItemProvider = new ExtensionsTypeItemProvider(this);
		}

		return extensionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.ImplementationArtifactType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplementationArtifactTypeItemProvider implementationArtifactTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.ImplementationArtifactType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplementationArtifactTypeAdapter() {
		if (implementationArtifactTypeItemProvider == null) {
			implementationArtifactTypeItemProvider = new ImplementationArtifactTypeItemProvider(this);
		}

		return implementationArtifactTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.IncludeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IncludeTypeItemProvider includeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.IncludeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIncludeTypeAdapter() {
		if (includeTypeItemProvider == null) {
			includeTypeItemProvider = new IncludeTypeItemProvider(this);
		}

		return includeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.InputParametersType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputParametersTypeItemProvider inputParametersTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.InputParametersType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputParametersTypeAdapter() {
		if (inputParametersTypeItemProvider == null) {
			inputParametersTypeItemProvider = new InputParametersTypeItemProvider(this);
		}

		return inputParametersTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.InstanceStateType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstanceStateTypeItemProvider instanceStateTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.InstanceStateType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstanceStateTypeAdapter() {
		if (instanceStateTypeItemProvider == null) {
			instanceStateTypeItemProvider = new InstanceStateTypeItemProvider(this);
		}

		return instanceStateTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.InterfacesType_TInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfacesType_TInterfaceItemProvider interfacesType_TInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.InterfacesType_TInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterfacesType_TInterfaceAdapter() {
		if (interfacesType_TInterfaceItemProvider == null) {
			interfacesType_TInterfaceItemProvider = new InterfacesType_TInterfaceItemProvider(this);
		}

		return interfacesType_TInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.InterfacesType_TExportedInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfacesType_TExportedInterfaceItemProvider interfacesType_TExportedInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.InterfacesType_TExportedInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterfacesType_TExportedInterfaceAdapter() {
		if (interfacesType_TExportedInterfaceItemProvider == null) {
			interfacesType_TExportedInterfaceItemProvider = new InterfacesType_TExportedInterfaceItemProvider(this);
		}

		return interfacesType_TExportedInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.NodeOperationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NodeOperationTypeItemProvider nodeOperationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.NodeOperationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNodeOperationTypeAdapter() {
		if (nodeOperationTypeItemProvider == null) {
			nodeOperationTypeItemProvider = new NodeOperationTypeItemProvider(this);
		}

		return nodeOperationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.NodeTypeReferenceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NodeTypeReferenceTypeItemProvider nodeTypeReferenceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.NodeTypeReferenceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNodeTypeReferenceTypeAdapter() {
		if (nodeTypeReferenceTypeItemProvider == null) {
			nodeTypeReferenceTypeItemProvider = new NodeTypeReferenceTypeItemProvider(this);
		}

		return nodeTypeReferenceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.OutputParametersType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutputParametersTypeItemProvider outputParametersTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.OutputParametersType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutputParametersTypeAdapter() {
		if (outputParametersTypeItemProvider == null) {
			outputParametersTypeItemProvider = new OutputParametersTypeItemProvider(this);
		}

		return outputParametersTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.PlanModelReferenceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PlanModelReferenceTypeItemProvider planModelReferenceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.PlanModelReferenceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPlanModelReferenceTypeAdapter() {
		if (planModelReferenceTypeItemProvider == null) {
			planModelReferenceTypeItemProvider = new PlanModelReferenceTypeItemProvider(this);
		}

		return planModelReferenceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.PlanModelType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PlanModelTypeItemProvider planModelTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.PlanModelType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPlanModelTypeAdapter() {
		if (planModelTypeItemProvider == null) {
			planModelTypeItemProvider = new PlanModelTypeItemProvider(this);
		}

		return planModelTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.PlanType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PlanTypeItemProvider planTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.PlanType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPlanTypeAdapter() {
		if (planTypeItemProvider == null) {
			planTypeItemProvider = new PlanTypeItemProvider(this);
		}

		return planTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.PoliciesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PoliciesTypeItemProvider policiesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.PoliciesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPoliciesTypeAdapter() {
		if (policiesTypeItemProvider == null) {
			policiesTypeItemProvider = new PoliciesTypeItemProvider(this);
		}

		return policiesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.PropertiesDefinitionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertiesDefinitionTypeItemProvider propertiesDefinitionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.PropertiesDefinitionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertiesDefinitionTypeAdapter() {
		if (propertiesDefinitionTypeItemProvider == null) {
			propertiesDefinitionTypeItemProvider = new PropertiesDefinitionTypeItemProvider(this);
		}

		return propertiesDefinitionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.PropertiesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertiesTypeItemProvider propertiesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.PropertiesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertiesTypeAdapter() {
		if (propertiesTypeItemProvider == null) {
			propertiesTypeItemProvider = new PropertiesTypeItemProvider(this);
		}

		return propertiesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.PropertiesTypeWithPropertyMappings} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertiesTypeWithPropertyMappingsItemProvider propertiesTypeWithPropertyMappingsItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.PropertiesTypeWithPropertyMappings}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertiesTypeWithPropertyMappingsAdapter() {
		if (propertiesTypeWithPropertyMappingsItemProvider == null) {
			propertiesTypeWithPropertyMappingsItemProvider = new PropertiesTypeWithPropertyMappingsItemProvider(this);
		}

		return propertiesTypeWithPropertyMappingsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.PropertyConstraintsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyConstraintsTypeItemProvider propertyConstraintsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.PropertyConstraintsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyConstraintsTypeAdapter() {
		if (propertyConstraintsTypeItemProvider == null) {
			propertyConstraintsTypeItemProvider = new PropertyConstraintsTypeItemProvider(this);
		}

		return propertyConstraintsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.PropertyMappingsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyMappingsTypeItemProvider propertyMappingsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.PropertyMappingsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyMappingsTypeAdapter() {
		if (propertyMappingsTypeItemProvider == null) {
			propertyMappingsTypeItemProvider = new PropertyMappingsTypeItemProvider(this);
		}

		return propertyMappingsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.RelationshipConstraintsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationshipConstraintsTypeItemProvider relationshipConstraintsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.RelationshipConstraintsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationshipConstraintsTypeAdapter() {
		if (relationshipConstraintsTypeItemProvider == null) {
			relationshipConstraintsTypeItemProvider = new RelationshipConstraintsTypeItemProvider(this);
		}

		return relationshipConstraintsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.RelationshipConstraintType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationshipConstraintTypeItemProvider relationshipConstraintTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.RelationshipConstraintType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationshipConstraintTypeAdapter() {
		if (relationshipConstraintTypeItemProvider == null) {
			relationshipConstraintTypeItemProvider = new RelationshipConstraintTypeItemProvider(this);
		}

		return relationshipConstraintTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.RelationshipOperationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationshipOperationTypeItemProvider relationshipOperationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.RelationshipOperationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationshipOperationTypeAdapter() {
		if (relationshipOperationTypeItemProvider == null) {
			relationshipOperationTypeItemProvider = new RelationshipOperationTypeItemProvider(this);
		}

		return relationshipOperationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.RequirementDefinitionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequirementDefinitionsTypeItemProvider requirementDefinitionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.RequirementDefinitionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequirementDefinitionsTypeAdapter() {
		if (requirementDefinitionsTypeItemProvider == null) {
			requirementDefinitionsTypeItemProvider = new RequirementDefinitionsTypeItemProvider(this);
		}

		return requirementDefinitionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.RequirementsType_TRequirement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequirementsType_TRequirementItemProvider requirementsType_TRequirementItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.RequirementsType_TRequirement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequirementsType_TRequirementAdapter() {
		if (requirementsType_TRequirementItemProvider == null) {
			requirementsType_TRequirementItemProvider = new RequirementsType_TRequirementItemProvider(this);
		}

		return requirementsType_TRequirementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.RequirementsType_TRequirementRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequirementsType_TRequirementRefItemProvider requirementsType_TRequirementRefItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.RequirementsType_TRequirementRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequirementsType_TRequirementRefAdapter() {
		if (requirementsType_TRequirementRefItemProvider == null) {
			requirementsType_TRequirementRefItemProvider = new RequirementsType_TRequirementRefItemProvider(this);
		}

		return requirementsType_TRequirementRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.SourceElementType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SourceElementTypeItemProvider sourceElementTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.SourceElementType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSourceElementTypeAdapter() {
		if (sourceElementTypeItemProvider == null) {
			sourceElementTypeItemProvider = new SourceElementTypeItemProvider(this);
		}

		return sourceElementTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.SourceInterfacesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SourceInterfacesTypeItemProvider sourceInterfacesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.SourceInterfacesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSourceInterfacesTypeAdapter() {
		if (sourceInterfacesTypeItemProvider == null) {
			sourceInterfacesTypeItemProvider = new SourceInterfacesTypeItemProvider(this);
		}

		return sourceInterfacesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TAppliesTo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TAppliesToItemProvider tAppliesToItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TAppliesTo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTAppliesToAdapter() {
		if (tAppliesToItemProvider == null) {
			tAppliesToItemProvider = new TAppliesToItemProvider(this);
		}

		return tAppliesToItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TargetElementType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TargetElementTypeItemProvider targetElementTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TargetElementType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTargetElementTypeAdapter() {
		if (targetElementTypeItemProvider == null) {
			targetElementTypeItemProvider = new TargetElementTypeItemProvider(this);
		}

		return targetElementTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TargetInterfacesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TargetInterfacesTypeItemProvider targetInterfacesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TargetInterfacesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTargetInterfacesTypeAdapter() {
		if (targetInterfacesTypeItemProvider == null) {
			targetInterfacesTypeItemProvider = new TargetInterfacesTypeItemProvider(this);
		}

		return targetInterfacesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TArtifactReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TArtifactReferenceItemProvider tArtifactReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TArtifactReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTArtifactReferenceAdapter() {
		if (tArtifactReferenceItemProvider == null) {
			tArtifactReferenceItemProvider = new TArtifactReferenceItemProvider(this);
		}

		return tArtifactReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TArtifactTemplate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TArtifactTemplateItemProvider tArtifactTemplateItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TArtifactTemplate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTArtifactTemplateAdapter() {
		if (tArtifactTemplateItemProvider == null) {
			tArtifactTemplateItemProvider = new TArtifactTemplateItemProvider(this);
		}

		return tArtifactTemplateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TArtifactType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TArtifactTypeItemProvider tArtifactTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TArtifactType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTArtifactTypeAdapter() {
		if (tArtifactTypeItemProvider == null) {
			tArtifactTypeItemProvider = new TArtifactTypeItemProvider(this);
		}

		return tArtifactTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TBoundaryDefinitions} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TBoundaryDefinitionsItemProvider tBoundaryDefinitionsItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TBoundaryDefinitions}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTBoundaryDefinitionsAdapter() {
		if (tBoundaryDefinitionsItemProvider == null) {
			tBoundaryDefinitionsItemProvider = new TBoundaryDefinitionsItemProvider(this);
		}

		return tBoundaryDefinitionsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TCapability} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TCapabilityItemProvider tCapabilityItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TCapability}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTCapabilityAdapter() {
		if (tCapabilityItemProvider == null) {
			tCapabilityItemProvider = new TCapabilityItemProvider(this);
		}

		return tCapabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TCapabilityDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TCapabilityDefinitionItemProvider tCapabilityDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TCapabilityDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTCapabilityDefinitionAdapter() {
		if (tCapabilityDefinitionItemProvider == null) {
			tCapabilityDefinitionItemProvider = new TCapabilityDefinitionItemProvider(this);
		}

		return tCapabilityDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TCapabilityRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TCapabilityRefItemProvider tCapabilityRefItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TCapabilityRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTCapabilityRefAdapter() {
		if (tCapabilityRefItemProvider == null) {
			tCapabilityRefItemProvider = new TCapabilityRefItemProvider(this);
		}

		return tCapabilityRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TCapabilityType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TCapabilityTypeItemProvider tCapabilityTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TCapabilityType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTCapabilityTypeAdapter() {
		if (tCapabilityTypeItemProvider == null) {
			tCapabilityTypeItemProvider = new TCapabilityTypeItemProvider(this);
		}

		return tCapabilityTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TConditionItemProvider tConditionItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTConditionAdapter() {
		if (tConditionItemProvider == null) {
			tConditionItemProvider = new TConditionItemProvider(this);
		}

		return tConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TConstraint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TConstraintItemProvider tConstraintItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TConstraint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTConstraintAdapter() {
		if (tConstraintItemProvider == null) {
			tConstraintItemProvider = new TConstraintItemProvider(this);
		}

		return tConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TDefinitions} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDefinitionsItemProvider tDefinitionsItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TDefinitions}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTDefinitionsAdapter() {
		if (tDefinitionsItemProvider == null) {
			tDefinitionsItemProvider = new TDefinitionsItemProvider(this);
		}

		return tDefinitionsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TDeploymentArtifact} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDeploymentArtifactItemProvider tDeploymentArtifactItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TDeploymentArtifact}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTDeploymentArtifactAdapter() {
		if (tDeploymentArtifactItemProvider == null) {
			tDeploymentArtifactItemProvider = new TDeploymentArtifactItemProvider(this);
		}

		return tDeploymentArtifactItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TDeploymentArtifacts} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDeploymentArtifactsItemProvider tDeploymentArtifactsItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TDeploymentArtifacts}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTDeploymentArtifactsAdapter() {
		if (tDeploymentArtifactsItemProvider == null) {
			tDeploymentArtifactsItemProvider = new TDeploymentArtifactsItemProvider(this);
		}

		return tDeploymentArtifactsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TDocumentation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDocumentationItemProvider tDocumentationItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TDocumentation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTDocumentationAdapter() {
		if (tDocumentationItemProvider == null) {
			tDocumentationItemProvider = new TDocumentationItemProvider(this);
		}

		return tDocumentationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TExportedInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TExportedInterfaceItemProvider tExportedInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TExportedInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTExportedInterfaceAdapter() {
		if (tExportedInterfaceItemProvider == null) {
			tExportedInterfaceItemProvider = new TExportedInterfaceItemProvider(this);
		}

		return tExportedInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TExportedOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TExportedOperationItemProvider tExportedOperationItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TExportedOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTExportedOperationAdapter() {
		if (tExportedOperationItemProvider == null) {
			tExportedOperationItemProvider = new TExportedOperationItemProvider(this);
		}

		return tExportedOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TExtensibleElements} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TExtensibleElementsItemProvider tExtensibleElementsItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TExtensibleElements}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTExtensibleElementsAdapter() {
		if (tExtensibleElementsItemProvider == null) {
			tExtensibleElementsItemProvider = new TExtensibleElementsItemProvider(this);
		}

		return tExtensibleElementsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TExtension} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TExtensionItemProvider tExtensionItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TExtension}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTExtensionAdapter() {
		if (tExtensionItemProvider == null) {
			tExtensionItemProvider = new TExtensionItemProvider(this);
		}

		return tExtensionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TExtensions} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TExtensionsItemProvider tExtensionsItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TExtensions}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTExtensionsAdapter() {
		if (tExtensionsItemProvider == null) {
			tExtensionsItemProvider = new TExtensionsItemProvider(this);
		}

		return tExtensionsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TImplementationArtifact} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TImplementationArtifactItemProvider tImplementationArtifactItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TImplementationArtifact}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTImplementationArtifactAdapter() {
		if (tImplementationArtifactItemProvider == null) {
			tImplementationArtifactItemProvider = new TImplementationArtifactItemProvider(this);
		}

		return tImplementationArtifactItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TImplementationArtifacts} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TImplementationArtifactsItemProvider tImplementationArtifactsItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TImplementationArtifacts}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTImplementationArtifactsAdapter() {
		if (tImplementationArtifactsItemProvider == null) {
			tImplementationArtifactsItemProvider = new TImplementationArtifactsItemProvider(this);
		}

		return tImplementationArtifactsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TImport} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TImportItemProvider tImportItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TImport}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTImportAdapter() {
		if (tImportItemProvider == null) {
			tImportItemProvider = new TImportItemProvider(this);
		}

		return tImportItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TInterfaceItemProvider tInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTInterfaceAdapter() {
		if (tInterfaceItemProvider == null) {
			tInterfaceItemProvider = new TInterfaceItemProvider(this);
		}

		return tInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TNodeTemplate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TNodeTemplateItemProvider tNodeTemplateItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TNodeTemplate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTNodeTemplateAdapter() {
		if (tNodeTemplateItemProvider == null) {
			tNodeTemplateItemProvider = new TNodeTemplateItemProvider(this);
		}

		return tNodeTemplateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TNodeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TNodeTypeItemProvider tNodeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TNodeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTNodeTypeAdapter() {
		if (tNodeTypeItemProvider == null) {
			tNodeTypeItemProvider = new TNodeTypeItemProvider(this);
		}

		return tNodeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TNodeTypeImplementation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TNodeTypeImplementationItemProvider tNodeTypeImplementationItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TNodeTypeImplementation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTNodeTypeImplementationAdapter() {
		if (tNodeTypeImplementationItemProvider == null) {
			tNodeTypeImplementationItemProvider = new TNodeTypeImplementationItemProvider(this);
		}

		return tNodeTypeImplementationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TOperationItemProvider tOperationItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTOperationAdapter() {
		if (tOperationItemProvider == null) {
			tOperationItemProvider = new TOperationItemProvider(this);
		}

		return tOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TParameterItemProvider tParameterItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTParameterAdapter() {
		if (tParameterItemProvider == null) {
			tParameterItemProvider = new TParameterItemProvider(this);
		}

		return tParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TPlan} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TPlanItemProvider tPlanItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TPlan}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTPlanAdapter() {
		if (tPlanItemProvider == null) {
			tPlanItemProvider = new TPlanItemProvider(this);
		}

		return tPlanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TPlans} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TPlansItemProvider tPlansItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TPlans}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTPlansAdapter() {
		if (tPlansItemProvider == null) {
			tPlansItemProvider = new TPlansItemProvider(this);
		}

		return tPlansItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TPolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TPolicyItemProvider tPolicyItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TPolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTPolicyAdapter() {
		if (tPolicyItemProvider == null) {
			tPolicyItemProvider = new TPolicyItemProvider(this);
		}

		return tPolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TPolicyTemplate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TPolicyTemplateItemProvider tPolicyTemplateItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TPolicyTemplate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTPolicyTemplateAdapter() {
		if (tPolicyTemplateItemProvider == null) {
			tPolicyTemplateItemProvider = new TPolicyTemplateItemProvider(this);
		}

		return tPolicyTemplateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TPolicyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TPolicyTypeItemProvider tPolicyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TPolicyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTPolicyTypeAdapter() {
		if (tPolicyTypeItemProvider == null) {
			tPolicyTypeItemProvider = new TPolicyTypeItemProvider(this);
		}

		return tPolicyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TPropertyConstraint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TPropertyConstraintItemProvider tPropertyConstraintItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TPropertyConstraint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTPropertyConstraintAdapter() {
		if (tPropertyConstraintItemProvider == null) {
			tPropertyConstraintItemProvider = new TPropertyConstraintItemProvider(this);
		}

		return tPropertyConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TPropertyMapping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TPropertyMappingItemProvider tPropertyMappingItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TPropertyMapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTPropertyMappingAdapter() {
		if (tPropertyMappingItemProvider == null) {
			tPropertyMappingItemProvider = new TPropertyMappingItemProvider(this);
		}

		return tPropertyMappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TRelationshipTemplate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TRelationshipTemplateItemProvider tRelationshipTemplateItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TRelationshipTemplate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTRelationshipTemplateAdapter() {
		if (tRelationshipTemplateItemProvider == null) {
			tRelationshipTemplateItemProvider = new TRelationshipTemplateItemProvider(this);
		}

		return tRelationshipTemplateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TRelationshipType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TRelationshipTypeItemProvider tRelationshipTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TRelationshipType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTRelationshipTypeAdapter() {
		if (tRelationshipTypeItemProvider == null) {
			tRelationshipTypeItemProvider = new TRelationshipTypeItemProvider(this);
		}

		return tRelationshipTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TRelationshipTypeImplementation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TRelationshipTypeImplementationItemProvider tRelationshipTypeImplementationItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TRelationshipTypeImplementation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTRelationshipTypeImplementationAdapter() {
		if (tRelationshipTypeImplementationItemProvider == null) {
			tRelationshipTypeImplementationItemProvider = new TRelationshipTypeImplementationItemProvider(this);
		}

		return tRelationshipTypeImplementationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TRequiredContainerFeature} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TRequiredContainerFeatureItemProvider tRequiredContainerFeatureItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TRequiredContainerFeature}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTRequiredContainerFeatureAdapter() {
		if (tRequiredContainerFeatureItemProvider == null) {
			tRequiredContainerFeatureItemProvider = new TRequiredContainerFeatureItemProvider(this);
		}

		return tRequiredContainerFeatureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TRequiredContainerFeatures} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TRequiredContainerFeaturesItemProvider tRequiredContainerFeaturesItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TRequiredContainerFeatures}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTRequiredContainerFeaturesAdapter() {
		if (tRequiredContainerFeaturesItemProvider == null) {
			tRequiredContainerFeaturesItemProvider = new TRequiredContainerFeaturesItemProvider(this);
		}

		return tRequiredContainerFeaturesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TRequirement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TRequirementItemProvider tRequirementItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TRequirement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTRequirementAdapter() {
		if (tRequirementItemProvider == null) {
			tRequirementItemProvider = new TRequirementItemProvider(this);
		}

		return tRequirementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TRequirementDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TRequirementDefinitionItemProvider tRequirementDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TRequirementDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTRequirementDefinitionAdapter() {
		if (tRequirementDefinitionItemProvider == null) {
			tRequirementDefinitionItemProvider = new TRequirementDefinitionItemProvider(this);
		}

		return tRequirementDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TRequirementRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TRequirementRefItemProvider tRequirementRefItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TRequirementRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTRequirementRefAdapter() {
		if (tRequirementRefItemProvider == null) {
			tRequirementRefItemProvider = new TRequirementRefItemProvider(this);
		}

		return tRequirementRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TRequirementType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TRequirementTypeItemProvider tRequirementTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TRequirementType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTRequirementTypeAdapter() {
		if (tRequirementTypeItemProvider == null) {
			tRequirementTypeItemProvider = new TRequirementTypeItemProvider(this);
		}

		return tRequirementTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TServiceTemplate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TServiceTemplateItemProvider tServiceTemplateItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TServiceTemplate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTServiceTemplateAdapter() {
		if (tServiceTemplateItemProvider == null) {
			tServiceTemplateItemProvider = new TServiceTemplateItemProvider(this);
		}

		return tServiceTemplateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TTag} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TTagItemProvider tTagItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TTag}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTTagAdapter() {
		if (tTagItemProvider == null) {
			tTagItemProvider = new TTagItemProvider(this);
		}

		return tTagItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TTags} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TTagsItemProvider tTagsItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TTags}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTTagsAdapter() {
		if (tTagsItemProvider == null) {
			tTagsItemProvider = new TTagsItemProvider(this);
		}

		return tTagsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TTopologyElementInstanceStates} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TTopologyElementInstanceStatesItemProvider tTopologyElementInstanceStatesItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TTopologyElementInstanceStates}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTTopologyElementInstanceStatesAdapter() {
		if (tTopologyElementInstanceStatesItemProvider == null) {
			tTopologyElementInstanceStatesItemProvider = new TTopologyElementInstanceStatesItemProvider(this);
		}

		return tTopologyElementInstanceStatesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TTopologyTemplate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TTopologyTemplateItemProvider tTopologyTemplateItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TTopologyTemplate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTTopologyTemplateAdapter() {
		if (tTopologyTemplateItemProvider == null) {
			tTopologyTemplateItemProvider = new TTopologyTemplateItemProvider(this);
		}

		return tTopologyTemplateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.TypesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypesTypeItemProvider typesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.TypesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypesTypeAdapter() {
		if (typesTypeItemProvider == null) {
			typesTypeItemProvider = new TypesTypeItemProvider(this);
		}

		return typesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.ValidSourceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValidSourceTypeItemProvider validSourceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.ValidSourceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValidSourceTypeAdapter() {
		if (validSourceTypeItemProvider == null) {
			validSourceTypeItemProvider = new ValidSourceTypeItemProvider(this);
		}

		return validSourceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tosca.ValidTargetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValidTargetTypeItemProvider validTargetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link tosca.ValidTargetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValidTargetTypeAdapter() {
		if (validTargetTypeItemProvider == null) {
			validTargetTypeItemProvider = new ValidTargetTypeItemProvider(this);
		}

		return validTargetTypeItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (artifactReferencesTypeItemProvider != null) artifactReferencesTypeItemProvider.dispose();
		if (capabilitiesType_TCapabilityItemProvider != null) capabilitiesType_TCapabilityItemProvider.dispose();
		if (capabilitiesType_CapabilityRefItemProvider != null) capabilitiesType_CapabilityRefItemProvider.dispose();
		if (capabilityDefinitionsTypeItemProvider != null) capabilityDefinitionsTypeItemProvider.dispose();
		if (constraintsTypeItemProvider != null) constraintsTypeItemProvider.dispose();
		if (definitionsTypeItemProvider != null) definitionsTypeItemProvider.dispose();
		if (derivedFromTypeItemProvider != null) derivedFromTypeItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (excludeTypeItemProvider != null) excludeTypeItemProvider.dispose();
		if (extensionsTypeItemProvider != null) extensionsTypeItemProvider.dispose();
		if (implementationArtifactTypeItemProvider != null) implementationArtifactTypeItemProvider.dispose();
		if (includeTypeItemProvider != null) includeTypeItemProvider.dispose();
		if (inputParametersTypeItemProvider != null) inputParametersTypeItemProvider.dispose();
		if (instanceStateTypeItemProvider != null) instanceStateTypeItemProvider.dispose();
		if (interfacesType_TInterfaceItemProvider != null) interfacesType_TInterfaceItemProvider.dispose();
		if (interfacesType_TExportedInterfaceItemProvider != null) interfacesType_TExportedInterfaceItemProvider.dispose();
		if (nodeOperationTypeItemProvider != null) nodeOperationTypeItemProvider.dispose();
		if (nodeTypeReferenceTypeItemProvider != null) nodeTypeReferenceTypeItemProvider.dispose();
		if (outputParametersTypeItemProvider != null) outputParametersTypeItemProvider.dispose();
		if (planModelReferenceTypeItemProvider != null) planModelReferenceTypeItemProvider.dispose();
		if (planModelTypeItemProvider != null) planModelTypeItemProvider.dispose();
		if (planTypeItemProvider != null) planTypeItemProvider.dispose();
		if (policiesTypeItemProvider != null) policiesTypeItemProvider.dispose();
		if (propertiesDefinitionTypeItemProvider != null) propertiesDefinitionTypeItemProvider.dispose();
		if (propertiesTypeItemProvider != null) propertiesTypeItemProvider.dispose();
		if (propertiesTypeWithPropertyMappingsItemProvider != null) propertiesTypeWithPropertyMappingsItemProvider.dispose();
		if (propertyConstraintsTypeItemProvider != null) propertyConstraintsTypeItemProvider.dispose();
		if (propertyMappingsTypeItemProvider != null) propertyMappingsTypeItemProvider.dispose();
		if (relationshipConstraintsTypeItemProvider != null) relationshipConstraintsTypeItemProvider.dispose();
		if (relationshipConstraintTypeItemProvider != null) relationshipConstraintTypeItemProvider.dispose();
		if (relationshipOperationTypeItemProvider != null) relationshipOperationTypeItemProvider.dispose();
		if (requirementDefinitionsTypeItemProvider != null) requirementDefinitionsTypeItemProvider.dispose();
		if (requirementsType_TRequirementItemProvider != null) requirementsType_TRequirementItemProvider.dispose();
		if (requirementsType_TRequirementRefItemProvider != null) requirementsType_TRequirementRefItemProvider.dispose();
		if (sourceElementTypeItemProvider != null) sourceElementTypeItemProvider.dispose();
		if (sourceInterfacesTypeItemProvider != null) sourceInterfacesTypeItemProvider.dispose();
		if (tAppliesToItemProvider != null) tAppliesToItemProvider.dispose();
		if (targetElementTypeItemProvider != null) targetElementTypeItemProvider.dispose();
		if (targetInterfacesTypeItemProvider != null) targetInterfacesTypeItemProvider.dispose();
		if (tArtifactReferenceItemProvider != null) tArtifactReferenceItemProvider.dispose();
		if (tArtifactTemplateItemProvider != null) tArtifactTemplateItemProvider.dispose();
		if (tArtifactTypeItemProvider != null) tArtifactTypeItemProvider.dispose();
		if (tBoundaryDefinitionsItemProvider != null) tBoundaryDefinitionsItemProvider.dispose();
		if (tCapabilityItemProvider != null) tCapabilityItemProvider.dispose();
		if (tCapabilityDefinitionItemProvider != null) tCapabilityDefinitionItemProvider.dispose();
		if (tCapabilityRefItemProvider != null) tCapabilityRefItemProvider.dispose();
		if (tCapabilityTypeItemProvider != null) tCapabilityTypeItemProvider.dispose();
		if (tConditionItemProvider != null) tConditionItemProvider.dispose();
		if (tConstraintItemProvider != null) tConstraintItemProvider.dispose();
		if (tDefinitionsItemProvider != null) tDefinitionsItemProvider.dispose();
		if (tDeploymentArtifactItemProvider != null) tDeploymentArtifactItemProvider.dispose();
		if (tDeploymentArtifactsItemProvider != null) tDeploymentArtifactsItemProvider.dispose();
		if (tDocumentationItemProvider != null) tDocumentationItemProvider.dispose();
		if (tExportedInterfaceItemProvider != null) tExportedInterfaceItemProvider.dispose();
		if (tExportedOperationItemProvider != null) tExportedOperationItemProvider.dispose();
		if (tExtensibleElementsItemProvider != null) tExtensibleElementsItemProvider.dispose();
		if (tExtensionItemProvider != null) tExtensionItemProvider.dispose();
		if (tExtensionsItemProvider != null) tExtensionsItemProvider.dispose();
		if (tImplementationArtifactItemProvider != null) tImplementationArtifactItemProvider.dispose();
		if (tImplementationArtifactsItemProvider != null) tImplementationArtifactsItemProvider.dispose();
		if (tImportItemProvider != null) tImportItemProvider.dispose();
		if (tInterfaceItemProvider != null) tInterfaceItemProvider.dispose();
		if (tNodeTemplateItemProvider != null) tNodeTemplateItemProvider.dispose();
		if (tNodeTypeItemProvider != null) tNodeTypeItemProvider.dispose();
		if (tNodeTypeImplementationItemProvider != null) tNodeTypeImplementationItemProvider.dispose();
		if (tOperationItemProvider != null) tOperationItemProvider.dispose();
		if (tParameterItemProvider != null) tParameterItemProvider.dispose();
		if (tPlanItemProvider != null) tPlanItemProvider.dispose();
		if (tPlansItemProvider != null) tPlansItemProvider.dispose();
		if (tPolicyItemProvider != null) tPolicyItemProvider.dispose();
		if (tPolicyTemplateItemProvider != null) tPolicyTemplateItemProvider.dispose();
		if (tPolicyTypeItemProvider != null) tPolicyTypeItemProvider.dispose();
		if (tPropertyConstraintItemProvider != null) tPropertyConstraintItemProvider.dispose();
		if (tPropertyMappingItemProvider != null) tPropertyMappingItemProvider.dispose();
		if (tRelationshipTemplateItemProvider != null) tRelationshipTemplateItemProvider.dispose();
		if (tRelationshipTypeItemProvider != null) tRelationshipTypeItemProvider.dispose();
		if (tRelationshipTypeImplementationItemProvider != null) tRelationshipTypeImplementationItemProvider.dispose();
		if (tRequiredContainerFeatureItemProvider != null) tRequiredContainerFeatureItemProvider.dispose();
		if (tRequiredContainerFeaturesItemProvider != null) tRequiredContainerFeaturesItemProvider.dispose();
		if (tRequirementItemProvider != null) tRequirementItemProvider.dispose();
		if (tRequirementDefinitionItemProvider != null) tRequirementDefinitionItemProvider.dispose();
		if (tRequirementRefItemProvider != null) tRequirementRefItemProvider.dispose();
		if (tRequirementTypeItemProvider != null) tRequirementTypeItemProvider.dispose();
		if (tServiceTemplateItemProvider != null) tServiceTemplateItemProvider.dispose();
		if (tTagItemProvider != null) tTagItemProvider.dispose();
		if (tTagsItemProvider != null) tTagsItemProvider.dispose();
		if (tTopologyElementInstanceStatesItemProvider != null) tTopologyElementInstanceStatesItemProvider.dispose();
		if (tTopologyTemplateItemProvider != null) tTopologyTemplateItemProvider.dispose();
		if (typesTypeItemProvider != null) typesTypeItemProvider.dispose();
		if (validSourceTypeItemProvider != null) validSourceTypeItemProvider.dispose();
		if (validTargetTypeItemProvider != null) validTargetTypeItemProvider.dispose();
	}

}
