// automatically generated by Xtext
grammar at.ac.tuwien.big.amltext.AMLText with org.eclipse.xtext.common.Terminals

import "http://big.tuwien.ac.at/caex" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.eclipse.org/emf/2003/XMLType" as type

CAEXFile returns CAEXFile:
	'CAEXFile'
	'{'
		('changeMode' changeMode=ChangeMode)?
		'fileName' fileName=STRING
		'schemaVersion' schemaVersion=STRING
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)* )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)* )?
		( externalReference+=ExternalReference ( "," externalReference+=ExternalReference)* )?
		( instanceHierarchy+=InstanceHierarchy ( "," instanceHierarchy+=InstanceHierarchy)* )?
		( interfaceClassLib+=InterfaceClassLib ( "," interfaceClassLib+=InterfaceClassLib)* )?
		( roleClassLib+=RoleClassLib ( "," roleClassLib+=RoleClassLib)* )?
		( systemUnitClassLib+=SystemUnitClassLib ( "," systemUnitClassLib+=SystemUnitClassLib)* )?
	'}';
	
InterfaceClass returns InterfaceClass:
	InterfaceClass_Impl | ExternalInterface | InterfaceFamily;

Description returns Description:
	{Description}
	'Description'
	'{'
		('value' value=STRING)?
		('changeMode' changeMode=ChangeMode)?
	'}';

Version returns Version:
	{Version}
	'Version'
	'{'
		('value' value=STRING)?
		('changeMode' changeMode=ChangeMode)?
	'}';

Revision returns Revision:
	'Revision'
	'{'
		('changeMode' changeMode=ChangeMode)?
		'revisionDate' revisionDate=DateTime
		('oldVersion' oldVersion=STRING)?
		('newVersion' newVersion=STRING)?
		'authorName' authorName=STRING
		('comment' comment=STRING)?
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)* )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)* )?
	'}';

Copyright returns Copyright:
	{Copyright}
	'Copyright'
	'{'
		('value' value=STRING)?
		('changeMode' changeMode=ChangeMode)?
	'}';

EObject returns ecore::EObject:
	{ecore::EObject}
	'EObject'
	;

enum ChangeMode returns ChangeMode:
				state = 'state' | create = 'create' | delete = 'delete' | change = 'change';

ExternalReference returns ExternalReference:
	'ExternalReference'
	'{'
		('changeMode' changeMode=ChangeMode)?
		'alias' alias=STRING
		'path' path=STRING
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)* )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)* )?
	'}';

InstanceHierarchy returns InstanceHierarchy:
	'InstanceHierarchy'
	'{'
		('changeMode' changeMode=ChangeMode)?
		('iD' iD=STRING)?
		'name' name=STRING
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)* )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)* )?
		( internalElement+=InternalElement ( "," internalElement+=InternalElement)* )?
	'}';

InterfaceClassLib returns InterfaceClassLib:
	'InterfaceClassLib'
	'{'
		('changeMode' changeMode=ChangeMode)?
		('iD' iD=STRING)?
		'name' name=STRING
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)* )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)*  )?
		( interfaceClass+=InterfaceFamily ( "," interfaceClass+=InterfaceFamily)*  )?
	'}';

RoleClassLib returns RoleClassLib:
	'RoleClassLib'
	'{'
		('changeMode' changeMode=ChangeMode)?
		('iD' iD=STRING)?
		'name' name=STRING
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)*  )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)*  )?
		( roleClass+=RoleFamily ( "," roleClass+=RoleFamily)*  )?
	'}';

SystemUnitClassLib returns SystemUnitClassLib:
	'SystemUnitClassLib'
	'{'
		('changeMode' changeMode=ChangeMode)?
		('iD' iD=STRING)?
		'name' name=STRING
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)*  )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)*  )?
		( systemUnitClass+=SystemUnitFamily ( "," systemUnitClass+=SystemUnitFamily)*  )?
	'}';

String0 returns type::String:
	'String' /* TODO: implement this rule and an appropriate IValueConverter */;

DateTime returns type::DateTime:
	'DateTime' /* TODO: implement this rule and an appropriate IValueConverter */;

InternalElement returns InternalElement:
	'InternalElement'
	'{'
		('changeMode' changeMode=ChangeMode)?
		('iD' iD=STRING)?
		'name' name=STRING
		('refBaseSystemUnitPath' refBaseSystemUnitPath=STRING)?
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)*  )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)*  )?
		( attribute+=Attribute ( "," attribute+=Attribute)*  )?
		( externalInterface+=InterfaceClass ( "," externalInterface+=InterfaceClass)*  )?
		( internalElement+=InternalElement ( "," internalElement+=InternalElement)*  )?
		( supportedRoleClass+=SupportedRoleClass ( "," supportedRoleClass+=SupportedRoleClass)*  )?
		( internalLink+=InternalLink ( "," internalLink+=InternalLink)*  )?
		('roleRequirements' roleRequirements=RoleRequirements)?
		('mappingObject' mappingObject=Mapping)?
	'}';

Attribute returns Attribute:
	'Attribute'
	'{'
		('changeMode' changeMode=ChangeMode)?
		('iD' iD=STRING)?
		'name' name=STRING
		('attributeDataType' attributeDataType=AttributeDataType)?
		('unit' unit=STRING)?
		('value' value=EString)?
		('defaultValue' defaultValue=EString)?
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)*  )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)*  )?
		( refSemantic+=RefSemantic ( "," refSemantic+=RefSemantic)*  )?
		( constraint+=AttributeValueRequirement ( "," constraint+=AttributeValueRequirement)*  )?
		( attribute+=Attribute ( "," attribute+=Attribute)*  )?
	'}';

InterfaceClass_Impl returns InterfaceClass:
	'InterfaceClass'
	'{'
		('changeMode' changeMode=ChangeMode)?
		('iD' iD=STRING)?
		'name' name=STRING
		('refBaseClassPath' refBaseClassPath=STRING)?
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)*  )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)*  )?
		( attribute+=Attribute ( "," attribute+=Attribute)*  )?
	'}';

SupportedRoleClass returns SupportedRoleClass:
	'SupportedRoleClass'
	'{'
		('changeMode' changeMode=ChangeMode)?
		'refRoleClassPath' refRoleClassPath=STRING
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)*  )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)*  )?
		('mappingObject' mappingObject=Mapping)?
	'}';

InternalLink returns InternalLink:
	'InternalLink'
	'{'
		('changeMode' changeMode=ChangeMode)?
		('iD' iD=STRING)?
		'name' name=STRING
		('refPartnerSideA' refPartnerSideA=STRING)?
		('refPartnerSideB' refPartnerSideB=STRING)?
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)*  )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)*  )?
	'}';

RoleRequirements returns RoleRequirements:
	{RoleRequirements}
	'RoleRequirements'
	'{'
		('changeMode' changeMode=ChangeMode)?
		('refBaseRoleClassPath' refBaseRoleClassPath=STRING)?
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)*  )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)*  )?
		( attribute+=Attribute ( "," attribute+=Attribute)*  )?
		( externalInterface+=InterfaceClass ( "," externalInterface+=InterfaceClass)*  )?
	'}';

Mapping returns Mapping:
	{Mapping}
	'Mapping'
	'{'
		('changeMode' changeMode=ChangeMode)?
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)*  )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)*  )?
		( attributeNameMapping+=AttributeNameMapping ( "," attributeNameMapping+=AttributeNameMapping)*  )?
		( interfaceNameMapping+=InterfaceNameMapping ( "," interfaceNameMapping+=InterfaceNameMapping)*  )?
	'}';

RefSemantic returns RefSemantic:
	'RefSemantic'
	'{'
		('changeMode' changeMode=ChangeMode)?
		'correspondingAttributePath' correspondingAttributePath=STRING
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)*  )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)*  )?
	'}';

AttributeValueRequirement returns AttributeValueRequirement:
	'AttributeValueRequirement'
	'{'
		('changeMode' changeMode=ChangeMode)?
		'name' name=STRING
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)*  )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)*  )?
		('ordinalScaledType' ordinalScaledType=OrdinalScaled)?
		('nominalScaledType' nominalScaledType=NominalScaled)?
		('unknownType' unknownType=UnknownType)?
	'}';

AttributeDataType returns AttributeDataType:
	'AttributeDataType' /* TODO: implement this rule and an appropriate IValueConverter */;

EString returns ecore::EString:
	STRING | ID;

OrdinalScaled returns OrdinalScaled:
	{OrdinalScaled}
	'OrdinalScaled'
	'{'
		('requiredMaxValue' requiredMaxValue=EString)?
		('requiredValue' requiredValue=EString)?
		('requiredMinValue' requiredMinValue=EString)?
	'}';

NominalScaled returns NominalScaled:
	{NominalScaled}
	'NominalScaled'
	'{'
		('requiredValue' requiredValue=EString)?
	'}';

UnknownType returns UnknownType:
	{UnknownType}
	'UnknownType'
	'{'
		('requirements' requirements=STRING)?
	'}';

ExternalInterface returns ExternalInterface:
	'ExternalInterface'
	'{'
		('changeMode' changeMode=ChangeMode)?
		('iD' iD=STRING)?
		'name' name=STRING
		('refBaseClassPath' refBaseClassPath=STRING)?
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)*  )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)*  )?
		( attribute+=Attribute ( "," attribute+=Attribute)*  )?
	'}';

InterfaceFamily returns InterfaceFamily:
	'InterfaceFamily'
	'{'
		('changeMode' changeMode=ChangeMode)?
		('iD' iD=STRING)?
		'name' name=STRING
		('refBaseClassPath' refBaseClassPath=STRING)?
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)*  )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)*  )?
		( attribute+=Attribute ( "," attribute+=Attribute)*  )?
		( interfaceClass+=InterfaceFamily ( "," interfaceClass+=InterfaceFamily)*  )?
	'}';

AttributeNameMapping returns AttributeNameMapping:
	'AttributeNameMapping'
	'{'
		('changeMode' changeMode=ChangeMode)?
		'roleAttributeName' roleAttributeName=STRING
		'systemUnitAttributeName' systemUnitAttributeName=STRING
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)*  )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)*  )?
	'}';

InterfaceNameMapping returns InterfaceNameMapping:
	'InterfaceNameMapping'
	'{'
		('changeMode' changeMode=ChangeMode)?
		'roleInterfaceName' roleInterfaceName=STRING
		'systemUnitInterfaceName' systemUnitInterfaceName=STRING
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)*  )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)*  )?
	'}';

RoleFamily returns RoleFamily:
	'RoleFamily'
	'{'
		('changeMode' changeMode=ChangeMode)?
		('iD' iD=STRING)?
		'name' name=STRING
		('refBaseClassPath' refBaseClassPath=STRING)?
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)*  )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)*  )?
		( attribute+=Attribute ( "," attribute+=Attribute)*  )?
		( externalInterface+=ExternalInterface ( "," externalInterface+=ExternalInterface)*  )?
		( roleClass+=RoleFamily ( "," roleClass+=RoleFamily)*  )?
	'}';

SystemUnitFamily returns SystemUnitFamily:
	'SystemUnitFamily'
	'{'
		('changeMode' changeMode=ChangeMode)?
		('iD' iD=STRING)?
		'name' name=STRING
		('refBaseClassPath' refBaseClassPath=STRING)?
		('description' description=Description)?
		('version' version=Version)?
		( revision+=Revision ( "," revision+=Revision)*  )?
		('copyright' copyright=Copyright)?
		( additionalInformation+=EObject ( "," additionalInformation+=EObject)*  )?
		( attribute+=Attribute ( "," attribute+=Attribute)*  )?
		( externalInterface+=InterfaceClass ( "," externalInterface+=InterfaceClass)*  )?
		( internalElement+=InternalElement ( "," internalElement+=InternalElement)*  )?
		( supportedRoleClass+=SupportedRoleClass ( "," supportedRoleClass+=SupportedRoleClass)*  )?
		( internalLink+=InternalLink ( "," internalLink+=InternalLink)*  )?
		( systemUnitClass+=SystemUnitFamily ( "," systemUnitClass+=SystemUnitFamily)*  )?
	'}';
